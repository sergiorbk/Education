<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="functionPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJAAAAArCAIAAAAYKZZZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA/5JREFUeF7tmPG5siAYR1uhGVqhHRqhGVrBDdqgDZqgCVqgBdqgHbqn78fl4QNE
        RO1mcv7oEX0B5fgCtnpWZkUVNjOqsJlRhc2M7xR2PB5Xq9X1ejXl55NjzpjCNIzYRXj/lipsNKqwciYV
        dj6fd7sdrcF+v388Hjrf1gU3Q7wp/A91ubrdbk35lypsNGG0s16v1bLaPBwO9lIvYRJPa+HVKswfzcvl
        wkhtNhvlR9M0bQOUhuQgyXTcV9jpdOI3erUK80eTtEAVznjNscUvZ+73u7mcB/G0iXsV+woTVdiLTmEC
        SaSI3nQLYVFo00T8A9/UxbQpB12oVojXThX2IlMYYSSZKfQhtAXRLiCqxPJWYdwx9x1t14NI5vqcyFHI
        EXa73RgpTvadCaO2IOxCfIQwbppuuO/8p6V7Fnm7p5qUtDDuXLZ4Cm6JYK6GAtqgIlV0rHHQsduFS1SJ
        oDrvMVnuDeP4wlAF9GfKeWiA3uAsLYwDe/OKbBvQELwS71IsjJNqwWIujC6M5sKXIhM9ld1ZTURa2ESM
        2MWYwngxsTUkS3i7yTNTmIZFCOOtZxyJc2WoJticYBNMMWzLruH2QxK1OuPlk1og3pQnIPHAs6BbGPMb
        g2uH2J3uSAjOaMYHfFDUsQvnqaWeJMPO0bau4ConiTTlAL2qnSRa+H5hFi2q7pYJYW7OMR9yxhQCJIMc
        okvC2tKIGHSawgQsSJhGvGkaFUkaim7CdY61jPLrJZYLjUy6jHkPzPFc0A33EAaMtVVCbrnpBTSUFqaZ
        sC23xOvWptwCLCjDgBHHGQcMepgoNJQQRrC35kUhAEwhgBtVQBqeylQIWJYwRWvovT9GgUttwlRFu5L0
        lxYB75wSZ0c/YYw10Qw9mFMOWqJMwcHa4oDqdhWMQkB6Xh3IsoRpo4GY6DqkJcoUftEHHL+aCTGnBGL9
        czcsgvsgOG10IMsSpo1iOBkKffa6M54EI8kKVo6iPPqPav1w7qSHMFKE5PB2hi4EYCIR0InNv+n4fmFE
        kA1EMJQMqGa2NtRcONflQBfUTW9JhvNXwhg3umYA6Z3Xunja7xamlQk6bQnCMiNdhmdnJn8lTLb0Kuse
        ootCJ93C6IYIhjLTAWE4plb+UkT377EFA4Xp9dUqzgMy6xTsaRki20hfuoWVweuDs5xxIZIdf/EI9mWI
        MC0NtIAncgVVOCt4z2iHF7Rs4ZhK2McyMMNAW199VppTyb9gvL6Ul8U74SqsBFoom9AG2oIqrDfMgcz2
        BTPhcFtQheVCFeriiRVIixBTYr42gqli++XrhdZ03IsqLBdVRBXHGn3I/2pELdVdqrAsioV9CIsT9sVU
        YTOjCpsZVdjMqMJmxfP5A8FuWCSvJU64AAAAAElFTkSuQmCC
</value>
  </data>
</root>